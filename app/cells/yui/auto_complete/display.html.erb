<link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.7.0/build/fonts/fonts-min.css" />
<link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.7.0/build/autocomplete/assets/skins/sam/autocomplete.css" />
<%= javascript_include_tag "http://yui.yahooapis.com/2.7.0/build/yahoo-dom-event/yahoo-dom-event.js" %>
<%= javascript_include_tag "http://yui.yahooapis.com/2.7.0/build/connection/connection-min.js" %>
<%= javascript_include_tag "http://yui.yahooapis.com/2.7.0/build/animation/animation-min.js" %>
<%= javascript_include_tag "http://yui.yahooapis.com/2.7.0/build/datasource/datasource-min.js" %>
<%= javascript_include_tag "http://yui.yahooapis.com/2.7.0/build/autocomplete/autocomplete-min.js" %>



<style type="text/css">
#myInput {
    width:25em; /* set width here or else widget will expand to fit its container */
}
</style>


<%  
    ### TODO: use YUILoader instead of manually including files.  
    ### FIXME: include script/style via #content_for. 
    ### prepend all ids with widget_id.
%>

<div id="<%= @name %>Div" class="yui-skin-sam">
	<input id="myInput" type="text" name="<%= @name %>">
	<div id="myContainer"></div>
</div>

<script type="text/javascript">
YAHOO.example.BasicRemote = function() {
    // Use an XHRDataSource
    var oDS = new YAHOO.util.XHRDataSource("<%= url_for(address_to_event({:type => :autocompleteQuery, :escape => false}, :data))  %>&");
    // Set the responseType
    oDS.responseType = YAHOO.util.XHRDataSource.TYPE_TEXT;
    // Define the schema of the delimited results
    oDS.responseSchema = {
        recordDelim: "\n",
        fieldDelim: "\t"
    };
    // Enable caching
    oDS.maxCacheEntries = 5;

    // Instantiate the AutoComplete
    var oAC = new YAHOO.widget.AutoComplete("myInput", "myContainer", oDS, {queryQuestionMark: false});
    //oAC.useShadow = true;
    
    return {
        oDS: oDS,
        oAC: oAC
    };
}();
</script>
