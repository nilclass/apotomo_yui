<%= javascript_include_tag YUI::Configuration.build_url + "/yuiloader/yuiloader.js" %>

<script type="text/javascript">
  var loader = new YAHOO.util.YUILoader({ 
	  require: ['autocomplete'], // what components? 
	  base: '<%= YUI::Configuration.build_url %>',//where do they live? 
    loadOptional: true, //load all optional dependencies? 
	  
    onSuccess: function () {
	 
	    // Apotomo code: ------------------------------------------------------------
	    // TODO: move creating to separate class (e.g. Apotomo.AutoComplete).
	    
	    YAHOO.example.BasicRemote = function() {
        // Use an XHRDataSource
        var oDS = new YAHOO.util.XHRDataSource("<%= url_for(address_to_event({:type => :autocompleteQuery, :escape => false}, :data))  %>&");
        // Set the responseType
        oDS.responseType = YAHOO.util.XHRDataSource.TYPE_TEXT;
        // Define the schema of the delimited results
        oDS.responseSchema = {
            recordDelim: "\n",
            fieldDelim: "\t"
        };
        // Enable caching
        oDS.maxCacheEntries = 5;
    
        // Instantiate the AutoComplete
        var oAC = new YAHOO.widget.AutoComplete("myInput", "myContainer", oDS, {queryQuestionMark: false});
        oAC.useShadow = true;
        
        return {
            oDS: oDS,
            oAC: oAC
        };
      }();
	    // Apotomo code ----------------------------------------------------------
	 
	 
	 }

	     }); 

  loader.insert();
</script>




<style type="text/css">
#myInput {
    width:25em; /* set width here or else widget will expand to fit its container */
}
</style>


<%  
    ### TODO: prepend all ids with widget_id.
%>

<div id="<%= @name %>Div" class="yui-skin-sam">
	<input id="myInput" type="text" name="<%= @name %>">
	<div id="myContainer"></div>
</div>
